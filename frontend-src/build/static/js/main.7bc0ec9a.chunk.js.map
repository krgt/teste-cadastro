{"version":3,"sources":["components/Dialog/Dialog.js","components/Snackbar/Snackbar.js","components/Forms/PostUser.js","components/Forms/PatchUser.js","components/Forms/DeleteUser.js","components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["open","closeDialog","openSnackbar","Component","component","userData","tableRef","title","tableObj","Dialog","aria-labelledby","DialogTitle","id","DialogContent","SimpleSnackbar","props","closeSnackbar","message","severity","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","event","reason","TransitionComponent","Slide","Alert","variant","withFormik","mapPropsToValues","name","phone","birthday","moment","format","cpf","email","password","validationSchema","Yup","shape","required","matches","min","test","cpfValue","isValid","handleSubmit","values","fetch","method","headers","body","JSON","stringify","then","res","json","status","Error","error","setTimeout","onQueryChange","catch","e","errors","touched","handleBlur","handleChange","fieldError","field","Boolean","commonProps","fieldId","margin","fullWidth","value","onChange","onBlur","helperText","TextField","label","type","autoFocus","DialogActions","Button","onClick","color","currentEmail","currentPassword","defaultDialogState","defaultSnackbarState","dataQuery","query","Promise","resolve","reject","console","log","offset","pageSize","page","url","response","result","data","forEach","row","age","diff","totalCount","count","useState","dialogState","setDialogState","snackbarState","setSnackbarState","setTableObj","React","createRef","useEffect","current","Fragment","initialPage","options","config","pageSizeOptions","columns","actions","icon","tooltip","isFreeAction","PostUser","rowData","PatchUser","DeleteUser","style","height","maxHeight","window","location","hostname","match","ReactDOM","render","Table","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bc0ec9a.chunk.js","sourcesContent":["import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nexport default ({\r\n  open,\r\n  closeDialog,\r\n  openSnackbar,\r\n  component: Component,\r\n  userData,\r\n  tableRef,\r\n  title,\r\n  tableObj\r\n}) => {\r\n  return (\r\n    <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        {Component\r\n          ? <Component\r\n              openSnackbar={openSnackbar}\r\n              tableRef={tableRef}\r\n              tableObj={tableObj}\r\n              closeDialog={closeDialog}\r\n              {...userData}\r\n            />\r\n          : ''}\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}","import React from 'react'\r\nimport { Snackbar, Slide } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst errorMessages = {\r\n  '23505': 'ERRO: Código duplicado.'\r\n}\r\n\r\nexport default function SimpleSnackbar(props) {\r\n  const { open, closeSnackbar, message, severity } = props\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    closeSnackbar()\r\n  }\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n      TransitionComponent={Slide}\r\n    >\r\n      <Alert variant=\"filled\" severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport { withFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport * as moment from 'moment'\r\nimport { cpf } from 'cpf-cnpj-validator'\r\n\r\nconst Form = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleBlur,\r\n  handleChange,\r\n  handleSubmit,\r\n  closeDialog,\r\n}) => {\r\n  const fieldError = field => Boolean(errors[field]) && touched[field]\r\n\r\n  const commonProps = fieldId => {\r\n    return {\r\n      required: true,\r\n      margin: \"dense\",\r\n      id: fieldId,\r\n      name: fieldId,\r\n      fullWidth: true,\r\n      value: values[fieldId],\r\n      onChange: handleChange,\r\n      onBlur: handleBlur,\r\n      helperText: fieldError(fieldId) ? errors[fieldId] : '',\r\n      error: fieldError(fieldId)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <TextField label=\"Nome\" type=\"text\" autoFocus {...commonProps('name')} />\r\n      <TextField label=\"Telefone\" type=\"tel\" {...commonProps('phone')} /> \r\n      <TextField label=\"Email\" type=\"email\" {...commonProps('email')} />\r\n      <TextField label=\"Password\" type=\"password\" password {...commonProps('password')} />\r\n      <TextField label=\"Data de Nascimento\" type=\"date\" {...commonProps('birthday')} />\r\n      <TextField label=\"CPF\" type=\"text\" {...commonProps('cpf')} />\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          Send\r\n        </Button>\r\n      </DialogActions>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withFormik({\r\n  mapPropsToValues(props) {\r\n    return {\r\n      name: props.name || '',\r\n      phone: props.phone || '',\r\n      birthday: props.birthday || moment().format('YYYY-MM-DD'),\r\n      cpf: props.cpf || '',\r\n      email: props.email || '',\r\n      password: '',\r\n    }\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    name: Yup.string().required(),\r\n    phone: Yup.string().matches(/^[0-9]*$/).required(),\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string().min(1).required(),\r\n    cpf: Yup.string().matches(/^[0-9]*$/).required()\r\n      .test('cpf-test', 'CPF inválido', cpfValue => cpf.isValid(cpfValue) )\r\n  }),\r\n  handleSubmit(values, props) {\r\n    fetch('/users', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then(res => res.json().then( body => {\r\n        const { tableObj, closeDialog, openSnackbar } = props.props\r\n\r\n        if (res.status !== 201)\r\n          throw Error(body.error)\r\n        openSnackbar('Success', 'success')\r\n        setTimeout(tableObj.onQueryChange, 1000)\r\n        closeDialog()\r\n      }))\r\n      .catch(e => {\r\n        props.props.openSnackbar(e.message, 'error')\r\n      })\r\n  }\r\n})(Form)","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport { withFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport * as moment from 'moment'\r\nimport { cpf } from 'cpf-cnpj-validator'\r\n\r\nconst Form = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleBlur,\r\n  handleChange,\r\n  handleSubmit,\r\n  closeDialog\r\n}) => {\r\n  const fieldError = field => Boolean(errors[field]) && touched[field]\r\n\r\n  const commonProps = fieldId => {\r\n    return {\r\n      required: true,\r\n      margin: \"dense\",\r\n      id: fieldId,\r\n      name: fieldId,\r\n      fullWidth: true,\r\n      value: values[fieldId],\r\n      onChange: handleChange,\r\n      onBlur: handleBlur,\r\n      helperText: fieldError(fieldId) ? errors[fieldId] : '',\r\n      error: fieldError(fieldId)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <TextField label=\"Password Atual\" type=\"password\" password {...commonProps('currentPassword')} />\r\n      <TextField label=\"Nome\" type=\"text\" autoFocus {...commonProps('name')} />\r\n      <TextField label=\"Telefone\" type=\"tel\" {...commonProps('phone')} /> \r\n      <TextField label=\"Email\" type=\"email\" {...commonProps('email')} />\r\n      <TextField label=\"Password\" type=\"password\" password {...commonProps('password')} />\r\n      <TextField label=\"Data de Nascimento\" type=\"date\" {...commonProps('birthday')} />\r\n      <TextField label=\"CPF\" type=\"text\" {...commonProps('cpf')} />\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          Send\r\n        </Button>\r\n      </DialogActions>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withFormik({\r\n  mapPropsToValues(props) {\r\n    return {\r\n      name: props.name || '',\r\n      phone: props.phone || '',\r\n      birthday: props.birthday || moment().format('YYYY-MM-DD'),\r\n      cpf: props.cpf || '',\r\n      currentEmail: props.email || '',\r\n      email: props.email || '',\r\n      password: '',\r\n    }\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    currentPassword: Yup.string().min(3).required(),\r\n    name: Yup.string().required(),\r\n    phone: Yup.string().matches(/^[0-9]*$/).required(),\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string().min(3).required(),\r\n    cpf: Yup.string().matches(/^[0-9]*$/).required()\r\n      .test('cpf-test', 'CPF inválido', cpfValue => cpf.isValid(cpfValue) )\r\n  }),\r\n  handleSubmit(values, props) {\r\n    values.email = props.props.email\r\n\r\n    fetch('/users', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then(res => res.json().then( body => {\r\n        const { tableObj, closeDialog, openSnackbar } = props.props\r\n\r\n        if (res.status !== 200)\r\n          throw Error(body.error)\r\n        openSnackbar('Success', 'success')\r\n        setTimeout(tableObj.onQueryChange, 1000)\r\n        closeDialog()\r\n      }))\r\n      .catch(e => {\r\n        props.props.openSnackbar(e.message, 'error')\r\n      })\r\n  }\r\n})(Form)","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport { withFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst Form = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleBlur,\r\n  handleChange,\r\n  handleSubmit,\r\n  closeDialog\r\n}) => {\r\n  const fieldError = field => Boolean(errors[field]) && touched[field]\r\n\r\n  const commonProps = fieldId => {\r\n    return {\r\n      required: true,\r\n      margin: \"dense\",\r\n      id: fieldId,\r\n      name: fieldId,\r\n      fullWidth: true,\r\n      value: values[fieldId],\r\n      onChange: handleChange,\r\n      onBlur: handleBlur,\r\n      helperText: fieldError(fieldId) ? errors[fieldId] : '',\r\n      error: fieldError(fieldId)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <TextField label=\"Password\" type=\"password\" password {...commonProps('password')} />\r\n\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withFormik({\r\n  mapPropsToValues(props) {\r\n    return {\r\n      password: '',\r\n    }\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    password: Yup.string().min(3).required(),\r\n  }),\r\n  handleSubmit(values, props) {\r\n    values.email = props.props.email\r\n\r\n    fetch('/users', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then(res => res.json().then( body => {\r\n        const { tableObj, closeDialog, openSnackbar } = props.props\r\n\r\n        if (res.status !== 200)\r\n          throw Error(body.error)\r\n        openSnackbar('Success', 'success')\r\n        setTimeout(tableObj.onQueryChange, 1000)\r\n        closeDialog()\r\n      }))\r\n      .catch(e => {\r\n        props.props.openSnackbar(e.message, 'error')\r\n      })\r\n  }\r\n})(Form)","import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport * as moment from \"moment\"\r\nimport Dialog from '../Dialog/Dialog'\r\nimport config from '../../config.json'\r\nimport Snackbar from '../Snackbar/Snackbar'\r\n\r\nimport {\r\n  PostUser,\r\n  PatchUser,\r\n  DeleteUser\r\n} from '../Forms'\r\n\r\nconst defaultDialogState = {\r\n  title: '',\r\n  open: false,\r\n  component: null,\r\n  userData: {},\r\n}\r\n\r\nconst defaultSnackbarState = {\r\n  open: false,\r\n  message: '',\r\n  severity: 'info'\r\n}\r\n\r\nconst dataQuery = query =>\r\n  new Promise((resolve, reject) => {\r\n    console.log('dataquery')\r\n    const offset = query.pageSize * query.page\r\n    let url = `/users?offset=${offset}&limit=${query.pageSize}`\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        console.log(result.data)\r\n        result.data.forEach( row => row.age = moment().diff(row.birthday, 'years') )\r\n        resolve({ data: result.data, page: result.page, totalCount: result.count, })\r\n      })\r\n      .catch(e => {\r\n        console.log(e)\r\n        resolve({ data: [], page: 0, totalCount: 0 })\r\n      })\r\n  })\r\n\r\nexport default props => {\r\n  const [dialogState, setDialogState] = useState(defaultDialogState)\r\n  const [snackbarState, setSnackbarState] = useState(defaultSnackbarState)\r\n  const [tableObj, setTableObj] = useState({})\r\n  const closeDialog = () => setDialogState(defaultDialogState)\r\n  const closeSnackbar = () => setSnackbarState(defaultSnackbarState)\r\n  const openSnackbar = (message, severity) => setSnackbarState({ open: true, message, severity })\r\n  const tableRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    setTableObj(tableRef.current)\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MaterialTable\r\n        tableRef={tableRef}\r\n        title=\"Teste CRUD de usuário\"\r\n        initialPage={0}\r\n        options={{\r\n          pageSize: config.pageSize,\r\n          pageSizeOptions: config.pageSizeOptions\r\n        }}\r\n        columns={[\r\n          { title: 'Nome', field: 'name' },\r\n          { title: 'Telefone', field: 'phone' },\r\n          { title: 'Data de Nascimento', field: 'birthday' },\r\n          { title: 'Idade', field: 'age', type: 'numeric' },\r\n          { title: 'CPF', field: 'cpf' },\r\n          { title: 'E-mail', field: 'email' },\r\n        ]}\r\n        data={dataQuery}\r\n        actions={[\r\n          {\r\n            icon: 'add',\r\n            tooltip: 'Add User',\r\n            isFreeAction: true,\r\n            onClick: (event) => setDialogState({\r\n              title: 'POST User',\r\n              open: true,\r\n              component: PostUser,\r\n              tableRef: tableRef\r\n            })\r\n          },\r\n          {\r\n            icon: 'edit',\r\n            tooltip: 'Edit User',\r\n            onClick: (event, rowData) => setDialogState({\r\n              title: 'PATCH User',\r\n              open: true,\r\n              component: PatchUser,\r\n              userData: rowData\r\n            })\r\n          },\r\n          {\r\n            icon: 'delete',\r\n            tooltip: 'Delete User',\r\n            onClick: (event, rowData) => setDialogState({\r\n              title: 'DELETE User',\r\n              open: true,\r\n              component: DeleteUser,\r\n              userData: rowData,\r\n            })\r\n          },\r\n        ]}\r\n      />\r\n\r\n      <Snackbar \r\n        closeSnackbar={closeSnackbar}\r\n        {...snackbarState}\r\n      />\r\n\r\n      <Dialog\r\n        closeDialog={closeDialog}\r\n        openSnackbar={openSnackbar}\r\n        tableObj={tableObj}\r\n        {...dialogState}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\n\nimport Table from './components/Table/Table'\n\nconst style = {\n  height: \"100vh\",\n  maxHeight: \"100vh\"\n}\n\nexport default () => {\n  return (\n    <main style={style}>\n      <Table />\n    </main>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}